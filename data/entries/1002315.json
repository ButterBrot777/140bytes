{"user":{"url":"https://api.github.com/users/subzey","login":"subzey","avatar_url":"https://secure.gravatar.com/avatar/ac8a5e8739b75bda6567a4630b91dd82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":810582},"fork_of":{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"description":"140byt.es -- Click ↑↑ fork ↑↑ to play!","url":"https://api.github.com/gists/962807","created_at":"2011-05-09T16:13:35Z","comments":45,"updated_at":"2011-05-18T12:15:41Z","public":true,"html_url":"https://gist.github.com/962807","git_pull_url":"git://gist.github.com/962807.git","id":"962807","files":{"annotated.js":{"filename":"annotated.js","raw_url":"https://gist.github.com/raw/962807/cd5c9947f41abdfd608a8995e02ba4a160bb2a08/annotated.js","size":396},"LICENSE.txt":{"filename":"LICENSE.txt","raw_url":"https://gist.github.com/raw/962807/dfb480a5038214d152544bddb412dfe2e8656413/LICENSE.txt","size":483},"README.md":{"filename":"README.md","raw_url":"https://gist.github.com/raw/962807/6832f0d91100cdb4373f2cfd42e12fc06532eac9/README.md","size":1457},"index.js":{"filename":"index.js","raw_url":"https://gist.github.com/raw/962807/c89ef021071af3b78eea79bcf0288a6e7873a62e/index.js","size":140},"test.html":{"filename":"test.html","raw_url":"https://gist.github.com/raw/962807/22ac2a8244f3a1fd650faf81dfdde9cbae7453e5/test.html","size":393},"package.json":{"filename":"package.json","raw_url":"https://gist.github.com/raw/962807/323b4aaa685a2bf7b15abdeed2fe03e11d63859f/package.json","size":241}},"git_push_url":"git@gist.github.com:962807.git"},"description":"vendorPrefixed","url":"https://api.github.com/gists/1002315","created_at":"2011-06-01T13:44:38Z","history":[{"user":{"url":"https://api.github.com/users/subzey","login":"subzey","avatar_url":"https://secure.gravatar.com/avatar/ac8a5e8739b75bda6567a4630b91dd82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":810582},"url":"https://api.github.com/gists/1002315/7a48964f11752ddc1a649f3356e81e18ca2cd9dd","committed_at":"2011-06-01T13:59:50Z","version":"7a48964f11752ddc1a649f3356e81e18ca2cd9dd","change_status":{"deletions":51,"additions":94,"total":145}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/97b4f64048ad388d12e0473b416d7e4893391f50","committed_at":"2011-06-01T13:42:07Z","version":"97b4f64048ad388d12e0473b416d7e4893391f50","change_status":{"deletions":7,"additions":5,"total":12}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/df573b0569cc36550aa73fa9244286f24823fbb9","committed_at":"2011-06-01T12:27:17Z","version":"df573b0569cc36550aa73fa9244286f24823fbb9","change_status":{"deletions":0,"additions":1,"total":1}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/2da28b4a103c6a4ca00d4d0fa808ee258b5d6eca","committed_at":"2011-05-31T22:34:03Z","version":"2da28b4a103c6a4ca00d4d0fa808ee258b5d6eca","change_status":{"deletions":1,"additions":1,"total":2}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/cb7ce28cbcfb095a319f290d0632332f22d90c72","committed_at":"2011-05-31T18:15:34Z","version":"cb7ce28cbcfb095a319f290d0632332f22d90c72","change_status":{"deletions":0,"additions":13,"total":13}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/a1fcbcb83329294f8afe9b71c132790e0c1f7d8b","committed_at":"2011-05-31T18:10:31Z","version":"a1fcbcb83329294f8afe9b71c132790e0c1f7d8b","change_status":{"deletions":19,"additions":17,"total":36}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/e69917d0323336a4cb552f60484b73c09eb538ee","committed_at":"2011-05-26T16:25:15Z","version":"e69917d0323336a4cb552f60484b73c09eb538ee","change_status":{"deletions":6,"additions":6,"total":12}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/a811e92efd1c0ae72be6dc9a95c4fcf1598134dd","committed_at":"2011-05-25T11:57:53Z","version":"a811e92efd1c0ae72be6dc9a95c4fcf1598134dd","change_status":{"deletions":8,"additions":8,"total":16}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/80a276faf6c6d20ddddf0a6976f251113e82182c","committed_at":"2011-05-23T08:25:12Z","version":"80a276faf6c6d20ddddf0a6976f251113e82182c","change_status":{"deletions":21,"additions":14,"total":35}},{"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161},"url":"https://api.github.com/gists/1002315/960fcc2cd42c2343f8abda98353165bf73f237f1","committed_at":"2011-05-23T08:18:48Z","version":"960fcc2cd42c2343f8abda98353165bf73f237f1","change_status":{"deletions":4,"additions":3,"total":7}}],"comments":0,"updated_at":"2011-06-01T13:59:51Z","public":true,"forks":[],"html_url":"https://gist.github.com/1002315","git_pull_url":"git://gist.github.com/1002315.git","id":"1002315","files":{"annotated.js":{"filename":"annotated.js","content":"//!\\\\  Please do not use eval in your everyday production code. And create DOM elements as less times as it possible.\n\n/* vendorPrefixed */\nfunction(s){\n\treturn eval(\n\t\t// Constructing the string:\n\t\t\n\t\t// Appending zero at the start, it is needed for correct syntax\n\t\t0 +\n\t\t// List of vendor prefixes. dash alone is enough to be a separator\n\t\t\"O-Moz-Webkit-Ms-\"\n\t\t// modifying it\n\t\t.replace(\n\t\t\t// Get anything until dash (ungreedy) or empty line at the end\n\t\t\t// so the replacement chunks are: <O-><Moz-><Webkit-><Ms-><>\n\t\t\t/.*?-|$/g,\n\t\t\t// Do inline replacement. \"$&\" is the captured string \n\t\t\t// Explaination of this mash goes further\n\t\t\t\"||(s='$&\"+s+\"')in new Image().style&&s\"\n\t\t)\n\t\t// Property names are still in dashed-css-notation and we need camelCase\n\t\t// Replacing all \"{dash} + {any char}\" into \"{any char}.toUpperCase()\"\n\t\t// There is no dashes in the generated code, so we can freely replace all.\n\t\t.replace(\n\t\t\t/-(.)/g,\n\t\t\t// $1 is the 1st captured parens\n\t\t\t\"'+'$1'.toUpperCase()+'\"\n\t\t)\n\t\t// Here we got the string ready to be evaluated\n\t)\n\t// eval() the string and return what eval returned\n}\n// If s contained a single quote, we have syntax error here.\n// But in real life if you need css property with quote inside, you're doing something wrong.\n\n\n/** END OF FILE *********************************/\n\n/** Comments: The generated string: *************/\n/* Let variable s = \"transform-origin\" */\n/* Indented in order to be clear */\n\n// The syntax-correction zero. This will affect nothing as it is always false */\n0 ||\n\n// Here we evaluating the .toUpperCase's inserted by original code */\n// Only if 'string'.replace(/regexp/, ''.toUpperCase.call) worked, I shouldn't do this evil eval tricks */\n(s = 'O' + 't'.toUpperCase() + 'ransform' + 'o'.toUpperCase() + 'rigin') in new Image().style && s ||\n// After toUpperCase worked we have:\n//>>> (s = \"OTransformOrigin\") in new Image().style && s ||\n// Assigning string to variable s.\n// It is already defined in function's scope as an argument, so we do not pollute the outer scope\n//>>> s in new Image().style && s ||\n// new Image() is like document.createElement(\"img\") but much shorter\n// So we create a new, fresh and unpolluted DOM element. And right after that getting its .style\n//>>> s in [[style]] && s\n// If s is defined in style, we get true. s is always true\n// So if there's no such property, we get false and go to next statement after ||\n// But if there is such prop, the following OR's are not evaluated\n// And the last encountered expression is\n//>>> s\n// So eval returns first property name that exists\n\n/* Same again */\n(s = 'Moz' + 't'.toUpperCase() + 'ransform' + 'o'.toUpperCase() + 'rigin') in new Image().style && s ||\n/* and again */\n(s = 'Webkit'+'t'.toUpperCase() + 'ransform' + 'o'.toUpperCase() + 'rigin') in new Image().style && s ||\n/* and even ms- */\n(s = 'Ms' + 't'.toUpperCase() + 'ransform' + 'o'.toUpperCase() + 'rigin') in new Image().style && s ||\n/* and finally without any vendor prefixes */\n(s = 'transform' + 'o'.toUpperCase() + 'rigin') in new Image().style && s\n\n/* And here it ends. If nothing matched, return false */","raw_url":"https://gist.github.com/raw/1002315/f741a6a5cc9029dae0586ed50d8c1ce9b0901cea/annotated.js","size":3127},"LICENSE.txt":{"filename":"LICENSE.txt","content":"            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2011 YOUR_NAME_HERE <YOUR_URL_HERE>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.","raw_url":"https://gist.github.com/raw/1002315/dfb480a5038214d152544bddb412dfe2e8656413/LICENSE.txt","size":483},"README.md":{"filename":"README.md","content":"vendorPrefixed\n=========\n\nFunction provides css property name trying Opera, Firefox, Chrome, Safari and IE vendor prefixes.\nArgument my be in camelCase and css-dashed-nonation.\n\n    var vendorPrefixed = function(){/* code */};\n    /* Opera */\n    vendorPrefixed(\"transformOrigin\"); // \"OTransformOrigin\"\n    /* Firefox */\n    vendorPrefixed(\"transform-origin\"); // \"MozTransformOrigin\"\n    /* Chrome */\n    vendorPrefixed(\"vertical-align\"); // \"verticalAlign\" as it doesn't require the vendor prefix\n    /* IE6 */\n    vendorPrefixed(\"border-radius\"); // false as there is no such pretty thing in IE6\n","raw_url":"https://gist.github.com/raw/1002315/1381a88669160e2256c1b953105bc2d6da50a340/README.md","size":600},"index.js":{"filename":"index.js","content":"function(s){return eval(0+\"O-Moz-Webkit-Ms-\".replace(/.*?-|$/g,\"||(s='$&\"+s+\"')in new Image().style&&s\").replace(/-(.)/g,\"'+'$1'.toUpperCase()+'\"))}","raw_url":"https://gist.github.com/raw/1002315/8d6fb28db5bdaac82b4c1126472852157e1a8efb/index.js","size":148},"test.html":{"filename":"test.html","content":"<!DOCTYPE html> \n<title>Foo</title>\n<div>Expected value: <b><i>prefix</i>Transform</b> (depends on browser and its capabilities)</div>\n<div>Actual value: <b id=\"ret\"></b></div>\n<script>\n  // write a small example that shows off the API for your example\n  // and tests it in one fell swoop.\n\n  var myFunction = function(s){return eval(0+\"O-Moz-Webkit-Ms-\".replace(/.*?-|$/g,\"||(s='$&\"+s+\"')in new Image().style&&s\").replace(/-(.)/g,\"'+'$1'.toUpperCase()+'\"))}\n\n  document.getElementById( \"ret\" ).innerHTML = myFunction(\"transform\")\n</script>","raw_url":"https://gist.github.com/raw/1002315/68ea8a4b9cf3dfcd08ef174587cb4f45f9930bb0/test.html","size":540},"package.json":{"filename":"package.json","content":"{\n  \"name\": \"vendorPrefixed\",\n\n  \"description\": \"Picks css property name trying vendor prefixes\",\n\n  \"keywords\": [\n    \"css\",\n    \"vendor-prefix\"\n  ]\n}","raw_url":"https://gist.github.com/raw/1002315/c172f069317af67bd05f20d00f9d37ef9f2a7ad2/package.json","size":151}},"git_push_url":"git@gist.github.com:1002315.git"}