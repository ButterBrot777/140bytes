{"html_url":"https://gist.github.com/1533031","url":"https://api.github.com/gists/1533031","created_at":"2011-12-29T08:51:02Z","description":"getFloat64LE","public":true,"git_pull_url":"git://gist.github.com/1533031.git","files":{"annotated.js":{"type":"application/javascript","content":"function(\n\ta, // array of integers (0..255), bytes, little-endian\n\tb, // placeholder: mantissa\n\tc  // placeholder: exponent\n){\n\t// Fetching mantissa (b)\n\tfor(\n\t\t// Store lower 4-bit part of byte 6.\n\t\t// Exponent (c) is unused yet, so it can be used as loop pointer\n\t\t// It is the 6 either.\n\t\tb = a[c = 6] % 16 \n\t;\n\t\t// Continue while non-zero\n\t\tc \n\t;\n\t\t// Store byte value at bytes 5 to 0 while shifting the mantissa.\n\t\t// Mantissa cannot be shifted using bitwise operators as its\n\t\t// value may (and most probably will) exceed Int32\n\t\tb = a[--c] + b * 256\n\t)\n\t\t// Empty loop body\n\t;\n\t// Reuse c to store exponent\n\t\n\t// Exponent will always fit into Int32\n\t// Trim the highest bit of byte 7 by shifting it out of Int32 bounds\n\t// then shifting it back to position 4.\n\t// >>> operator cleans the sign\n\t\n\t// Then adding upper 4-bit part of byte 6\n\tc = a[7] << 25 >>> 21 | a[6] >> 4;\n\n\t// Okay, we have mantissa and exponent, now return the product of...\n\treturn\n\t\t// Sign of float (7th bit of 7th byte)\n\t\t(a[7] >> 7 ? -1 : 1) * \n\t\t// 2^(exponent - exponent bias - mantissa byte-length + 1)\n\t\t// We cannot use 1075 as if exponent is zero Float64 underflows \n\t\t// Save bytes by storing Math.pow, reuse `a` variable\n\t\t(a = Math.pow)(2, c - 1074) *\n\t\t// Fraction part\n\t\t(c\n\t\t\t// If exponent is not zero \n\t\t\t? c^2047\n\t\t\t\t// And if exponent if not 0x7FF\n\t\t\t\t// Set the 53th bit of mantissa to 1\n\t\t\t\t// and divide it by 2 (1 missed power of 2 in exponent)\n\t\t\t\t// (b + Math.pow(2, 52)) * Math.pow(2, -1)\n\t\t\t\t? b / 2 + a(2, 51)\n\t\t\t\t// If exponent is 0x7FF the whole decoded value is a NaN\n\t\t\t\t// or Infinity depending on mantissa\n\t\t\t\t// 0/0 makes NaN, anything_else/0 makes Infinity\n\t\t\t\t: !b / 0\n\t\t\t/* <- end of ternary operator */\n\n\t\t\t// If exponent is a zero, this is a subnormal number and\n\t\t\t// we do nothing with mantissa\n\t\t\t: b\n\t\t/* <- end of ternary operator */\n\t\t)\n\t/* <- end of return statement */\n}","size":1897,"filename":"annotated.js","raw_url":"https://gist.github.com/raw/1533031/50a62a2f966c74e1756afff1986d6e3e4f067a84/annotated.js","language":"JavaScript"},"index-no-external-static.js":{"type":"application/javascript","content":"function(a,b,c){for(b=a[c=6]%16;c;b=a[--c]+b*256);c=a[7]<<25>>>21|a[6]>>4;return(a[7]>>7?-1:1)*(a=Math.pow)(2,c-1074)*(c?c^2047?b/2+a(2,51):!b/0:b)}","size":148,"filename":"index-no-external-static.js","raw_url":"https://gist.github.com/raw/1533031/16e3d61e0183985789bd74b8b5ac6e850ad95629/index-no-external-static.js","language":"JavaScript"},"LICENSE.txt":{"type":"text/plain","content":"            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2011 subzey <subzey@gmail.com>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.","size":478,"filename":"LICENSE.txt","raw_url":"https://gist.github.com/raw/1533031/f4216b265cb4c7c06eb06d173554d4653dc33369/LICENSE.txt","language":"Text"},"README.md":{"type":"text/plain","content":"getFloat64LE\n============\n\nConstructs a IEEE 754 64 bit float (double) from byte array. Handles both normal and subnormal values and special cases like ±∞, ±0 and NaN.\n\nUsage\n-----\n\n`getFloat64LE(array, Math.pow)`\n\n`array` is a byte array. It may be Array, Arguments, ArrayBuffer, nodejs Buffer or any object that have keys 0 to 7. Values must be in range 0 to 255.\n\n`Math.pow` is a `Math.pow`. Sorry, I had to do it in order to fit code into 140 bytes. See `index-no-external-static.js` for version that doesn't require it\n\n\nMore tweet sized code\n---------------------\n\nSee the [140byt.es](http://140byt.es) site for a showcase of entries (built itself using 140-byte entries!), and follow [@140bytes](http://twitter.com/140bytes) on Twitter.\n\nTo learn about byte-saving hacks for your own code, or to contribute what you've learned, head to [the wiki](https://github.com/jed/140bytes/wiki/Byte-saving-techniques).\n\n140byt.es is brought to you by [Jed Schmidt](http://jed.is), with help from Alex Kloss. It was inspired by work from [Thomas Fuchs](http://mir.aculo.us) and [Dustin Diaz](http://www.dustindiaz.com/).","size":1120,"filename":"README.md","raw_url":"https://gist.github.com/raw/1533031/3019a80a51a6bb1ecb8692e2e37feb549a38f081/README.md","language":"Markdown"},"index.js":{"type":"application/javascript","content":"function(a,z,b,c){for(b=a[c=6]%16;c;b=a[--c]+b*256);c=a[7]<<25>>>21|a[6]>>4;return(a[7]>>7?-1:1)*z(2,c-1074)*(c?c^2047?b/2+z(2,51):!b/0:b)}","size":139,"filename":"index.js","raw_url":"https://gist.github.com/raw/1533031/fe72e4794a2aa79be9c17ad9ecfb7b92f55d30ec/index.js","language":"JavaScript"},"test.html":{"type":"text/html","content":"<!DOCTYPE html> \n<head>\n<title>Foo</title>\n</head>\n<body>\n<table id=\"tests\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Actual</th>\n\t\t\t<th>Expected</th>\n\t\t\t<th>Native ArrayBuffer</th>\n\t\t\t<th>Comments</th>\n\t\t</tr>\n\t</thead>\n</table>\n\n<script>\nvar getFloat64LE = function(a,z,b,c){for(b=a[c=6]%16;c;b=a[--c]+b*256);c=a[7]<<25>>>21|a[6]>>4;return(a[7]>>7?-1:1)*z(2,c-1074)*(c?c^2047?b/2+z(2,51):!b/0:b)}\n\nvar nativeGetFloat64LE = function(a){\n\tif (!window.ArrayBuffer || !window.DataView) return 'Not available for this browser';\n\tvar b = new ArrayBuffer(8);\n\tfor (var i=0; i<8; i++){\n\t\tb[i] = a[i];\n\t};\n\treturn new DataView(b).getFloat64(0, true /* LE flag */);\n}\n\nvar testCases = [\n\t{test: [0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xD5, 0x3F], expect: '0.3333333333333333',      name: '+1/3'},\n\t{test: [0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xD5, 0xBF], expect: '-0.3333333333333333',     name: '-1/3'},\n\t{test: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], expect: '0',                       name: 'zero'},\n\t{test: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80], expect: '0',                       name: 'minus zero'},\n\t{test: [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00], expect: '2.225073858507201e-308',  name: 'Highest subnormal number'},\n\t{test: [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80], expect: '-5e-324',                 name: 'Lowest subnormal number (Number.MIN_VALUE)'},\n\t{test: [0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80], expect: '-1e-323',                 name: 'Second lowest subnormal number'},\n\t{test: [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x7F], expect: '1.7976931348623157e+308', name: 'Highest finite number (Number.MAX_VALUE)'},\n\t{test: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x7F], expect: 'Infinity',                name: 'Infinity'},\n\t{test: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF], expect: '-Infinity',               name: 'Minus infinity'},\n\t{test: [0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0xF0, 0xFF], expect: 'NaN',                     name: 'NaN'},\n\t{test: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x7F], expect: 'NaN',                     name: 'Another NaN'},\n\t{test: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x40], expect: '42',                      name: 'The answer to Life, the Universe and Everything'}\n];\n\nvar tbody = document.getElementById('tests').appendChild(document.createElement(\"tbody\"));\nfor (var i=0; i<testCases.length; i++){\n\twith (testCases[i]){\n\t\tvar data = [\n\t\t\tgetFloat64LE(test, Math.pow),\n\t\t\texpect,\n\t\t\tnativeGetFloat64LE(test),\n\t\t\tname\n\t\t]\n\t};\n\tvar tr = tbody.appendChild(document.createElement('tr'));\n\tfor (var j=0; j<data.length; j++){\n\t\ttr.appendChild(document.createElement('td')).appendChild(document.createTextNode(data[j]));\n\t};\n}\n</script>\n</body>\n</html>","size":2734,"filename":"test.html","raw_url":"https://gist.github.com/raw/1533031/9800d341e2f19aa2c883ea60916465afb90de92d/test.html","language":"HTML"},"package.json":{"type":"application/json","content":"{\n  \"name\": \"getFloat64LE\",\n\n  \"description\": \"Constructs ECMA-262 Float64 (Double) from byte array\",\n\n  \"keywords\": [\n    \"float\",\n    \"double\",\n    \"float64\",\n    \"IEEE 754\"\n  ]\n}","size":181,"filename":"package.json","raw_url":"https://gist.github.com/raw/1533031/b8afc2a5b8a06d5d0a7405c3d9c7c8625950887b/package.json","language":"JSON"}},"git_push_url":"git@gist.github.com:1533031.git","history":[{"url":"https://api.github.com/gists/1533031/ad0b64081352e17f670ce73bfaf09887b7849b33","version":"ad0b64081352e17f670ce73bfaf09887b7849b33","committed_at":"2011-12-29T08:52:42Z","change_status":{"additions":137,"deletions":44,"total":181},"user":{"url":"https://api.github.com/users/subzey","login":"subzey","gravatar_id":"ac8a5e8739b75bda6567a4630b91dd82","avatar_url":"https://secure.gravatar.com/avatar/ac8a5e8739b75bda6567a4630b91dd82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":810582}},{"url":"https://api.github.com/gists/1533031/96ff24cc4f871061134de4188fa24cf4b53d3986","version":"96ff24cc4f871061134de4188fa24cf4b53d3986","committed_at":"2011-07-28T06:44:45Z","change_status":{"additions":1,"deletions":1,"total":2},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/1e1c7df97b55fe8f1543433a83d0e76a4a575055","version":"1e1c7df97b55fe8f1543433a83d0e76a4a575055","committed_at":"2011-07-28T06:44:14Z","change_status":{"additions":2,"deletions":2,"total":4},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/97b4f64048ad388d12e0473b416d7e4893391f50","version":"97b4f64048ad388d12e0473b416d7e4893391f50","committed_at":"2011-06-01T13:42:07Z","change_status":{"additions":5,"deletions":7,"total":12},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/df573b0569cc36550aa73fa9244286f24823fbb9","version":"df573b0569cc36550aa73fa9244286f24823fbb9","committed_at":"2011-06-01T12:27:17Z","change_status":{"additions":1,"deletions":0,"total":1},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/2da28b4a103c6a4ca00d4d0fa808ee258b5d6eca","version":"2da28b4a103c6a4ca00d4d0fa808ee258b5d6eca","committed_at":"2011-05-31T22:34:03Z","change_status":{"additions":1,"deletions":1,"total":2},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/cb7ce28cbcfb095a319f290d0632332f22d90c72","version":"cb7ce28cbcfb095a319f290d0632332f22d90c72","committed_at":"2011-05-31T18:15:34Z","change_status":{"additions":13,"deletions":0,"total":13},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/a1fcbcb83329294f8afe9b71c132790e0c1f7d8b","version":"a1fcbcb83329294f8afe9b71c132790e0c1f7d8b","committed_at":"2011-05-31T18:10:31Z","change_status":{"additions":17,"deletions":19,"total":36},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/e69917d0323336a4cb552f60484b73c09eb538ee","version":"e69917d0323336a4cb552f60484b73c09eb538ee","committed_at":"2011-05-26T16:25:15Z","change_status":{"additions":6,"deletions":6,"total":12},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},{"url":"https://api.github.com/gists/1533031/a811e92efd1c0ae72be6dc9a95c4fcf1598134dd","version":"a811e92efd1c0ae72be6dc9a95c4fcf1598134dd","committed_at":"2011-05-25T11:57:53Z","change_status":{"additions":8,"deletions":8,"total":16},"user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}}],"fork_of":{"html_url":"https://gist.github.com/962807","url":"https://api.github.com/gists/962807","created_at":"2011-05-09T16:13:35Z","description":"140byt.es -- Click ↑↑ fork ↑↑ to play!","public":true,"git_pull_url":"git://gist.github.com/962807.git","files":{"annotated.js":{"type":"application/javascript","size":396,"filename":"annotated.js","raw_url":"https://gist.github.com/raw/962807/cd5c9947f41abdfd608a8995e02ba4a160bb2a08/annotated.js","language":"JavaScript"},"LICENSE.txt":{"type":"text/plain","size":483,"filename":"LICENSE.txt","raw_url":"https://gist.github.com/raw/962807/dfb480a5038214d152544bddb412dfe2e8656413/LICENSE.txt","language":"Text"},"README.md":{"type":"text/plain","size":1457,"filename":"README.md","raw_url":"https://gist.github.com/raw/962807/6832f0d91100cdb4373f2cfd42e12fc06532eac9/README.md","language":"Markdown"},"index.js":{"type":"application/javascript","size":140,"filename":"index.js","raw_url":"https://gist.github.com/raw/962807/c89ef021071af3b78eea79bcf0288a6e7873a62e/index.js","language":"JavaScript"},"test.html":{"type":"text/html","size":393,"filename":"test.html","raw_url":"https://gist.github.com/raw/962807/22ac2a8244f3a1fd650faf81dfdde9cbae7453e5/test.html","language":"HTML"},"package.json":{"type":"application/json","size":241,"filename":"package.json","raw_url":"https://gist.github.com/raw/962807/323b4aaa685a2bf7b15abdeed2fe03e11d63859f/package.json","language":"JSON"}},"git_push_url":"git@gist.github.com:962807.git","comments":51,"updated_at":"2011-05-18T12:15:41Z","id":"962807","user":{"url":"https://api.github.com/users/140bytes","login":"140bytes","gravatar_id":"53e21508b6995fa42f2e034b87daa901","avatar_url":"https://secure.gravatar.com/avatar/53e21508b6995fa42f2e034b87daa901?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":777161}},"comments":3,"updated_at":"2011-12-29T09:46:45Z","forks":[],"id":"1533031","user":{"url":"https://api.github.com/users/subzey","login":"subzey","gravatar_id":"ac8a5e8739b75bda6567a4630b91dd82","avatar_url":"https://secure.gravatar.com/avatar/ac8a5e8739b75bda6567a4630b91dd82?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":810582}}